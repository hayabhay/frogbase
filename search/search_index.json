{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>\ud83d\udc38 FrogBase lets you create &amp; navigate knowledge from multi-media content.</p> <pre><code>from frogbase import FrogBase\n\nfb = FrogBase()\n\nsources = [\n   \"https://www.youtube.com/watch?v=HBxn56l9WcU\",\n   \"https://www.youtube.com/@hayabhay\"\n]\n\nfb.add(sources)\\\n   .transcribe()\\\n   .embed()\\\n   .index()\n\nfb.search(\"What is the name of the squeaky frog?\")\n</code></pre> <p> </p> <p>Find FrogBase on Discord</p>"},{"location":"#features","title":"Features","text":"<p>FrogBase currently provides functionality to:</p> <ul> <li>Download media files from a wide range of platforms (YouTube, TikTok, Vimeo, etc.) using yt_dlp</li> <li>Transcribe audio streams for downloaded &amp; local files using OpenAI's Whisper</li> <li>Embed transcribed text from corresponding video segments using Sentence Transformers</li> <li>Index &amp; search the embedded content using hnswlib</li> </ul> <p>FrogBase also includes a Streamlit UI to provide a simple GUI for the above functionality enabling a locally hosted, interactive experience.</p>"},{"location":"#non-technical-users","title":"Non-technical Users","text":"<p>This section is for non-technical users who want to use FrogBase primarily through the accompanying Streamlit UI.</p> <ol> <li> <p>Download the latest release of FrogBase from here and unzip it.    Or, you can also clone the repository    <code>console git clone https://github.com/hayabhay/frogbase.git</code></p> </li> <li> <p>Install FrogBase dependencies manually and run the UI.</p> </li> </ol> <p>Note: This also requires <code>ffmpeg</code> to be installed on your system. You can install it using <code>sudo apt install ffmpeg</code> on Ubuntu.</p> <ol> <li> <p>Using pip</p> <pre><code>pip install frogbase streamlit\nstreamlit run ui/01_\ud83c\udfe0_Home.py\n</code></pre> </li> </ol> <p>[Coming soon] Instructions, environment for installation using Docker &amp; Anaconda</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/hayabhay/frogbase/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>FrogBase could always use more documentation, whether as part of the official FrogBase docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/hayabhay/frogbase/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>frogbase</code> for local development.</p> <ol> <li>Fork the <code>frogbase</code> repo on GitHub.</li> <li>Clone your fork locally</li> </ol> <pre><code>    $ git clone git@github.com:hayabhay/frogbase.git\n</code></pre> <ol> <li>Ensure poetry is installed.</li> <li>Install dependencies and start your virtualenv:</li> </ol> <pre><code>    $ poetry install --with ui,test,docs,ui\n</code></pre> <ol> <li>Create a branch for local development:</li> </ol> <pre><code>    $ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> <ol> <li>Commit your changes and push your branch to GitHub:</li> </ol> <pre><code>    $ git add .\n    $ pre-commit run --all-files\n    $ git commit -m \"Your detailed description of your changes.\"\n    $ git push origin name-of-your-bugfix-or-feature\n</code></pre> <ol> <li>Submit a pull request through the GitHub website.</li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.8, 3.9, 3.11 and for PyPy. Check    https://github.com/hayabhay/frogbase/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#tips","title":"Tips","text":"<p>To run a subset of tests.</p> <pre><code>    $ pytest tests.test_frogbase\n</code></pre>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in HISTORY.md). Then run:</p> <pre><code>$ poetry patch # possible: major / minor / patch\n$ git push\n$ git push --tags\n</code></pre> <p>Github Actions will then deploy to PyPI if tests pass.</p>"},{"location":"history/","title":"History","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"history/#200a0-2023-07-05","title":"<code>2.0.0a0</code> <code>[2023-07-05]</code>","text":"<p>\u26a0\ufe0f Breaking Changes</p> <p>A complete rewrite of the application. This is now split into two parts:</p> <ul> <li>A small Python utility package called <code>frogbase</code> that contains all the backend logic for the UI. This can be used as a standalone package or integrated into other applications.</li> <li>A slimmer Streamlit UI that provides a thin wrapper around the <code>frogbase</code> package built purely with self-hosted applications in mind.</li> </ul> <p>Featuress</p> <ul> <li> <p>More content sources &amp; formats</p> </li> <li> <p>The use of <code>pytube</code> has been replaced with <code>yt_dlp</code>. This unlocks content download from a broad range of media platforms like YouTube (channels, playlists, videos), TikTok, Vimeo etc. (full list)</p> </li> <li>Local files can now be ingested from a directory instead of just a single file.</li> </ul> <p>Sources can now be added in as a list of urls and/or local file paths.</p> <ul> <li> <p>Semantic Search</p> </li> <li> <p>The search functionality now includes semantic search over transcript contents instead of a simple substring search.     This is done using sentence-transformers and hnswlib</p> </li> <li> <p>Updated Streamlit UI</p> </li> <li>The UI now includes the concept of Libraries to further organize media downloads. Libraries are simply subdirectories within the main data directory.</li> <li>Filter &amp; search functionality have been simplified and made more intuitive.</li> </ul>"},{"location":"history/#110-2023-02-08","title":"<code>1.1.0</code> <code>[2023-02-08]</code>","text":"<ul> <li>Merged feature from @Eidenz to add translation in addition to transcription</li> </ul>"},{"location":"history/#100-2023-02-07","title":"<code>1.0.0</code> <code>[2023-02-07]</code>","text":"<p>Since there was some apetite for this, I've rewritten this to make it a tad cleaner with a few additional features based on issues raised and personal preferences.</p> <ol> <li>Ability to download entire YouTube playlists and upload multiple files at once</li> <li>Ability to browse, filter, and search through saved audio files (For now, this is done with a simple SQLite database &amp; SQLAlchemy ORM)</li> <li>Auto-export of transcriptions in multiple formats (was a feature request)</li> <li>Simple substring based search for transcript segments. This is done with a simple <code>LIKE</code> query on the SQLite database.</li> <li>Fully reworked UI with a cleaner layout and more intuitive navigation.</li> <li>Ability to save whisper configurations and reuse to prevent having to re-enter the same parameters every time.</li> <li>Removed the ability to crop audio after download to simplify the codebase. Also, temporarily removed summarization until GPT-3 integration is complete.</li> </ol>"},{"location":"history/#001-2022-10-17","title":"<code>0.0.1</code> <code>[2022-10-17]</code>","text":"<p>Initial release for demand testing (PR #1).</p> <p>Features:</p> <ul> <li>Ability to process media from YouTube &amp; local files</li> <li>Whisper transcription</li> <li>Basic huggingface integration for summarization</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#installation","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install FrogBase, run this command in your terminal:</p> <pre><code>pip install frogbase\n</code></pre> <p>This is the preferred method to install FrogBase, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-source","title":"From source","text":"<p>The source for FrogBase can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>git clone git://github.com/hayabhay/frogbase\n</code></pre> <p>Or download the tarball:</p> <pre><code>curl -OJL https://github.com/hayabhay/frogbase/tarball/main\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>pip install .\n</code></pre>"},{"location":"roadmap/","title":"Roadmap","text":""},{"location":"roadmap/#roadmap","title":"Roadmap","text":"<p>To request a feature, please start a discussion thread or open an issue.</p> <p>Some things on the list in no particular order.</p> <ul> <li>[ ] Add support for OpenAI integration</li> <li>[ ] Integrate with PyAnnote for speaker diarization.</li> <li>[ ] Add Support for Facebook's MMS model</li> <li>[ ] Add support for Whisper.cpp</li> <li>[ ] Add support for Llama.cpp</li> <li>[ ] Record button to directly consume audio from the Streamlit App (see PR #38)       multilingual-model-speech-recognition/)</li> <li>...</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#usage","title":"Usage","text":"<p>Under construction.</p>"}]}